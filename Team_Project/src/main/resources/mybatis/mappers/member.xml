<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.team.interview.dao.MemberDAO">

  <resultMap type="com.team.interview.vo.MemberVO" id="memberMap">
    <id property="email" column="email"/>
    <result property="email" column="email"/>
    <result property="pfId" column="pf_id"/>
    <result property="pw" column="pw"/>
    <result property="name" column="name"/>
    <result property="enabled" column="enabled"/>
    <result property="phoneNum" column="phone_num"/>
    <result property="type" column="type"/>
    <result property="lockdate" column="lockdate"/>
    <result property="failureCnt" column="failure_cnt"/>
    <result property="regdate" column="regdate"/>
    <result property="updatedate" column="updatedate"/>
    <result property="fromSocial" column="from_social"/>
    <collection property="authList" resultMap="authMap">
    </collection> 
  </resultMap>
  
  <resultMap type="com.team.interview.vo.AuthVO" id="authMap">
    <result property="email" column="email"/>
    <result property="auth" column="auth"/>
  </resultMap>
  
  <resultMap type="com.team.interview.vo.CompanyVO" id="companyMap">
    <id property="email" column="email"/>
	  <result property="email" column="email" />
	  <result property="logoImgId" column="logo_img_id" />
	  <result property="cEmail" column="c_email" />
	  <result property="cName" column="c_name" />
	  <result property="regdate" column="regdate" />
	  <result property="updatedate" column="updatedate" />
  </resultMap>

    <update id="updateMypageProfile">
UPDATE TBL_MEMBER 
set
  name = #{name}
  ,updatedate = sysdate
  ,phone_num = #{phoneNum}
 WHERE email = #{email}
    </update>


    <update id="updatePfIdByEmail">
    UPDATE TBL_MEMBER 
		   SET 
		  pf_id = profile_sq.currval
		 WHERE email = #{email}
    </update>


    <insert id="insertMember" parameterType="MemberVO">
        <![CDATA[
        INSERT INTO tbl_member (
                 email
               , PF_ID
               , pw
               , name
               , from_social
               , type
               , FAILURE_CNT
        )
        VALUES(
                #{email}
              , profile_sq.currval
              , #{pw}
              , #{name}
              , #{fromSocial}
              , #{type}
              , 0
              )
        ]]>
    </insert>
    
    <insert id="insertSocialMember" parameterType="MemberVO">
        <![CDATA[
        INSERT INTO tbl_member (
                 email
               , pw
               , name
               , from_social
               , type
               , FAILURE_CNT
        )
        VALUES(
                #{email}
              , #{pw}
              , #{name}
              , #{fromSocial}
              , #{type}
              , 0
              )
        ]]>
    </insert>
    
    <insert id="insertCompany" parameterType="CompanyVO">
        <![CDATA[
        INSERT INTO tbl_com(
				  email
				  , c_email
				  , c_name
				  ) 
				VALUES(
				  #{email}
				  , #{cEmail}
				  , #{cName}
				  )
        ]]>
    </insert>

    <insert id="insertAuth" parameterType="AuthVO">
        <![CDATA[
        INSERT
        INTO
            tbl_auth
            (
             email,
             auth
            )
        VALUES
            (
             #{email},
             #{auth}
            )
        ]]>
    </insert>
    
    <select id="findByEmail" resultMap = "memberMap">
      <![CDATA[
      SELECT 
        mem.email
	       , pf_id
	       , pw
	       , name
	       , type
	       , mem.regdate regdate
	       , mem.updatedate updatedate
	       , enabled
	       , from_social
	       , phone_num
	       , lockdate
	       , failure_cnt
	       , auth.auth
      FROM 
        tbl_member mem 
          LEFT OUTER JOIN 
        tbl_auth auth 
        on mem.email = auth.email 
      WHERE mem.email = #{email} and from_social = #{fromSocial}
      ]]>
    </select>
    <select id="findByEmailOnly" resultMap = "memberMap">
      <![CDATA[
      SELECT 
        mem.email
	       , pf_id
	       , pw
	       , name
	       , type
	       , mem.regdate regdate
	       , mem.updatedate updatedate
	       , enabled
	       , from_social
	       , phone_num
	       , lockdate
	       , failure_cnt
	       , auth.auth
      FROM 
        tbl_member mem 
          LEFT OUTER JOIN 
        tbl_auth auth 
        on mem.email = auth.email 
      WHERE mem.email = #{email}
      ]]>
    </select>
</mapper>